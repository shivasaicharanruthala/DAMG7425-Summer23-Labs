# -*- coding: utf-8 -*-
"""meteorites_cloud.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/ydataai/pandas-profiling/blob/master/examples/meteorites/meteorites_cloud.ipynb

## Pandas Profiling: NASA Meteorites example
Source of data: https://data.nasa.gov/Space-Science/Meteorite-Landings/gh4g-9sfh

Make sure that we have the latest version of pandas-profiling.
"""

"""### Import libraries"""


"""### Load and prepare example dataset
We add some fake variables for illustrating pandas-profiling capabilities
"""


import numpy as np
import pandas as pd
import ydata_profiling
from ydata_profiling.utils.cache import cache_file
from pandas_profiling import ProfileReport

file_name = cache_file(
    "meteorites.csv",
    "https://data.nasa.gov/api/views/gh4g-9sfh/rows.csv?accessType=DOWNLOAD",
)

df = pd.read_csv(file_name)

# Note: Pandas does not support dates before 1880, so we ignore these for this analysis
df["year"] = pd.to_datetime(df["year"], errors="coerce")

# Example: Constant variable
df["source"] = "NASA"

# Example: Boolean variable
df["boolean"] = np.random.choice([True, False], df.shape[0])

# Example: Mixed with base types
df["mixed"] = np.random.choice([1, "A"], df.shape[0])

# Example: Highly correlated variables
df["reclat_city"] = df["reclat"] + np.random.normal(scale=5, size=(len(df)))

# Example: Duplicate observations
duplicates_to_add = pd.DataFrame(df.iloc[0:10])
duplicates_to_add["name"] = duplicates_to_add["name"] + " copy"

df = df.append(duplicates_to_add, ignore_index=True)

"""### Inline report without saving object"""

# report = df.profile_report(
#     sort=None, html={"style": {"full_width": True}}, progress_bar=False
# )
# report

"""### Save report to file"""

profile = ProfileReport(df, minimal=True)
profile.to_file("profile_export.html")

# profile_report = df.profile_report(html={"style": {"full_width": True}})
# profile_report.to_file("profile.html")

"""### More analysis (Unicode) and Print existing ProfileReport object inline"""

# profile_report = df.profile_report(
#     explorative=True, html={"style": {"full_width": True}}
# )
# profile_report
